@model SilkFlo.Web.Services.Models.Account.SignIn

<div class="account account_SignIn">
    
    @await Html.PartialAsync("Account/_Brand")
     
    <div class="account_Right account_Right_SignIn">
        <div>
            <div class="panel-heading">
                <h1>Sign In</h1>
                <p>Log in with your data that you entered during your registration</p>
            </div>

            <div class="panel-body">
                <form asp-action="SignIn"
                        asp-route-returnUrl="@Context.Request.Query["returnUrl"]">


                    <!-- Email Input -->
                    @await Html.PartialAsync("Elements/_LabeledInput",
                        new SilkFlo.Web.ViewModels.Element
                        {
                            Title = "Email",
                            Id = "Email",
                            Name = "Email",
                            Value = Model.Email,
                            ElementType = "text",
                            InvalidFeedback = "Required",
                            MaximumLength = 100,
                            Autocomplete = "",
                        })


                    <!-- Password Input -->
                    @await Html.PartialAsync("Elements/_LabeledInput",
                        new SilkFlo.Web.ViewModels.Element
                        {
                            Title = "Password",
                            Id = "Password",
                            Name = "Password",
                            Value = "",
                            ElementType = "password",
                            InvalidFeedback = "Required",
                            Attributes = "autocomplete=\"off\"",
                            MaximumLength = 100,
                        })



                    <div class="silkFlo_flex_wrap_spaced">
                            <div class="form-check form-switch" style="margin-right: 9px;">
                                @Html.CheckBoxFor(model => model.RememberMe,
                                                    new { @class = "form-check-input", @id = "RememberMe" })
                                <label class="form-check-label"
                                        for="RememberMe">Remember Me</label>
                            </div>
                        
                            <div class="form-check form-switch">
                                @Html.CheckBoxFor(model => model.StaySignedIn,
                                                    new { @class = "form-check-input", @id = "StaySignedIn" })
                                <label class="form-check-label"
                                        for="StaySignedIn">Keep me signed in</label>
                            </div>
                    </div>


                    @if (!ViewContext.ModelState.IsValid)
                    {
                        <div style="margin: 2rem 0;">
                        @foreach (var error in ViewContext.ModelState.Root.Errors)
                        {
                            @Html.Raw("<span class=\"text-danger\">" + error.ErrorMessage + "</span>");   
                        }
                        </div>
                    }

                    <button style="width:100%" class="btn btn-brand btn-lg">Sign In</button>

                        <div style="justify-content: center">
                            <p>Do not have an account? <a href="/pricing">Subscribe</a> now.</p>
                            <p><a asp-controller="account" asp-action="ForgotPassword">Forgot your password?</a></p>
                        </div>
                </form>
            </div>
        </div>
    </div>
</div>
